import { ElementRef, OnDestroy, OnInit } from '@angular/core';
import { RxStrategyProvider } from '@rx-angular/cdk/render-strategies';
import { RxLet } from '@rx-angular/template/let';
import { BehaviorSubject, Observable, Subject } from 'rxjs';
import * as i0 from "@angular/core";
export declare class ViewportPrioDirective implements OnInit, OnDestroy {
    private readonly el;
    private strategyProvider;
    private letDirective;
    entriesSubject: Subject<Pick<IntersectionObserverEntry, "intersectionRatio">[]>;
    entries$: Observable<Pick<IntersectionObserverEntry, 'intersectionRatio'>>;
    _viewportPrioObservables: BehaviorSubject<string | Observable<string>>;
    _viewportPrio: Observable<string>;
    set viewportPrio(prio: string | Observable<string>);
    private observer;
    visibilityEvents$: Observable<"visible" | "invisible">;
    constructor(el: ElementRef<HTMLElement>, strategyProvider: RxStrategyProvider, letDirective: RxLet<any> | null);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ViewportPrioDirective, [null, null, { optional: true; }]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ViewportPrioDirective, "[viewport-prio]", never, { "viewportPrio": { "alias": "viewport-prio"; "required": false; }; }, {}, never, never, true, never>;
}
