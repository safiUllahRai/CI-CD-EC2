import { InjectionToken } from '@angular/core';
import { RX_CONCURRENT_STRATEGIES } from './concurrent-strategies';
import { RX_NATIVE_STRATEGIES } from './native-strategies';
export const RX_RENDER_STRATEGIES_CONFIG = new InjectionToken('rxa-render-strategies-config');
export const RX_RENDER_STRATEGIES_DEFAULTS = {
    primaryStrategy: 'normal',
    customStrategies: {
        ...RX_NATIVE_STRATEGIES,
        ...RX_CONCURRENT_STRATEGIES,
    },
    patchZone: true,
    parent: false,
};
export function mergeDefaultConfig(cfg) {
    const custom = cfg
        ? cfg
        : {
            customStrategies: {},
        };
    return {
        ...RX_RENDER_STRATEGIES_DEFAULTS,
        ...custom,
        customStrategies: {
            ...custom.customStrategies,
            ...RX_RENDER_STRATEGIES_DEFAULTS.customStrategies,
        },
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9jZGsvcmVuZGVyLXN0cmF0ZWdpZXMvc3JjL2xpYi9jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMvQyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQU1uRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQVkzRCxNQUFNLENBQUMsTUFBTSwyQkFBMkIsR0FBRyxJQUFJLGNBQWMsQ0FFM0QsOEJBQThCLENBQUMsQ0FBQztBQUVsQyxNQUFNLENBQUMsTUFBTSw2QkFBNkIsR0FFdEM7SUFDRixlQUFlLEVBQUUsUUFBUTtJQUN6QixnQkFBZ0IsRUFBRTtRQUNoQixHQUFHLG9CQUFvQjtRQUN2QixHQUFHLHdCQUF3QjtLQUM1QjtJQUNELFNBQVMsRUFBRSxJQUFJO0lBQ2YsTUFBTSxFQUFFLEtBQUs7Q0FDTCxDQUFDO0FBRVgsTUFBTSxVQUFVLGtCQUFrQixDQUNoQyxHQUFpQztJQUVqQyxNQUFNLE1BQU0sR0FBZ0MsR0FBRztRQUM3QyxDQUFDLENBQUMsR0FBRztRQUNMLENBQUMsQ0FBRTtZQUNDLGdCQUFnQixFQUFFLEVBQUU7U0FDYixDQUFDO0lBQ2QsT0FBTztRQUNMLEdBQUcsNkJBQTZCO1FBQ2hDLEdBQUcsTUFBTTtRQUNULGdCQUFnQixFQUFFO1lBQ2hCLEdBQUcsTUFBTSxDQUFDLGdCQUFnQjtZQUMxQixHQUFHLDZCQUE2QixDQUFDLGdCQUFnQjtTQUNsRDtLQUNGLENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJYX0NPTkNVUlJFTlRfU1RSQVRFR0lFUyB9IGZyb20gJy4vY29uY3VycmVudC1zdHJhdGVnaWVzJztcbmltcG9ydCB7XG4gIFJ4Q3VzdG9tU3RyYXRlZ3lDcmVkZW50aWFscyxcbiAgUnhEZWZhdWx0U3RyYXRlZ3lOYW1lcyxcbiAgUnhTdHJhdGVneU5hbWVzLFxufSBmcm9tICcuL21vZGVsJztcbmltcG9ydCB7IFJYX05BVElWRV9TVFJBVEVHSUVTIH0gZnJvbSAnLi9uYXRpdmUtc3RyYXRlZ2llcyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUnhSZW5kZXJTdHJhdGVnaWVzQ29uZmlnPFQgZXh0ZW5kcyBzdHJpbmc+IHtcbiAgcHJpbWFyeVN0cmF0ZWd5PzogUnhTdHJhdGVneU5hbWVzPFQ+O1xuICBjdXN0b21TdHJhdGVnaWVzPzogUnhDdXN0b21TdHJhdGVneUNyZWRlbnRpYWxzPFQ+O1xuICBwYXRjaFpvbmU/OiBib29sZWFuO1xuICAvKipcbiAgICogIEBkZXByZWNhdGVkIFRoaXMgZmxhZyB3aWxsIGJlIGRyb3BwZWQgc29vbiwgYXMgaXQgaXMgbm8gbG9uZ2VyIHJlcXVpcmVkIHdoZW4gdXNpbmcgc2lnbmFsIGJhc2VkIHZpZXcgJiBjb250ZW50IHF1ZXJpZXNcbiAgICovXG4gIHBhcmVudD86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBjb25zdCBSWF9SRU5ERVJfU1RSQVRFR0lFU19DT05GSUcgPSBuZXcgSW5qZWN0aW9uVG9rZW48XG4gIFJ4UmVuZGVyU3RyYXRlZ2llc0NvbmZpZzxzdHJpbmc+XG4+KCdyeGEtcmVuZGVyLXN0cmF0ZWdpZXMtY29uZmlnJyk7XG5cbmV4cG9ydCBjb25zdCBSWF9SRU5ERVJfU1RSQVRFR0lFU19ERUZBVUxUUzogUmVxdWlyZWQ8XG4gIFJ4UmVuZGVyU3RyYXRlZ2llc0NvbmZpZzxSeERlZmF1bHRTdHJhdGVneU5hbWVzPlxuPiA9IHtcbiAgcHJpbWFyeVN0cmF0ZWd5OiAnbm9ybWFsJyxcbiAgY3VzdG9tU3RyYXRlZ2llczoge1xuICAgIC4uLlJYX05BVElWRV9TVFJBVEVHSUVTLFxuICAgIC4uLlJYX0NPTkNVUlJFTlRfU1RSQVRFR0lFUyxcbiAgfSxcbiAgcGF0Y2hab25lOiB0cnVlLFxuICBwYXJlbnQ6IGZhbHNlLFxufSBhcyBjb25zdDtcblxuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlRGVmYXVsdENvbmZpZzxUIGV4dGVuZHMgc3RyaW5nPihcbiAgY2ZnPzogUnhSZW5kZXJTdHJhdGVnaWVzQ29uZmlnPFQ+LFxuKTogUmVxdWlyZWQ8UnhSZW5kZXJTdHJhdGVnaWVzQ29uZmlnPFQgfCBSeERlZmF1bHRTdHJhdGVneU5hbWVzPj4ge1xuICBjb25zdCBjdXN0b206IFJ4UmVuZGVyU3RyYXRlZ2llc0NvbmZpZzxUPiA9IGNmZ1xuICAgID8gY2ZnXG4gICAgOiAoe1xuICAgICAgICBjdXN0b21TdHJhdGVnaWVzOiB7fSxcbiAgICAgIH0gYXMgYW55KTtcbiAgcmV0dXJuIHtcbiAgICAuLi5SWF9SRU5ERVJfU1RSQVRFR0lFU19ERUZBVUxUUyxcbiAgICAuLi5jdXN0b20sXG4gICAgY3VzdG9tU3RyYXRlZ2llczoge1xuICAgICAgLi4uY3VzdG9tLmN1c3RvbVN0cmF0ZWdpZXMsXG4gICAgICAuLi5SWF9SRU5ERVJfU1RSQVRFR0lFU19ERUZBVUxUUy5jdXN0b21TdHJhdGVnaWVzLFxuICAgIH0sXG4gIH07XG59XG4iXX0=