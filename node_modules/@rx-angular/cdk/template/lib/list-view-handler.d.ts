import { IterableChanges } from '@angular/core';
import { RxListViewContext } from './list-view-context';
import { RxListTemplateChanges, RxListTemplateSettings } from './model';
/**
 * @internal
 *
 * Factory that returns a `ListTemplateManager` for the passed params.
 *
 * @param templateSettings
 */
export declare function getTemplateHandler<C extends RxListViewContext<T>, T>(templateSettings: Omit<RxListTemplateSettings<T, C>, 'patchZone'>): ListTemplateManager<T>;
/**
 * @internal
 *
 * An object that holds methods needed to introduce actions to a list e.g. move, remove, insert
 */
export interface ListTemplateManager<T> {
    updateUnchangedContext(item: T, index: number, count: number): void;
    insertView(item: T, index: number, count: number): void;
    moveView(oldIndex: number, item: T, index: number, count: number): void;
    updateView(item: T, index: number, count: number): void;
    removeView(index: number): void;
    getListChanges(changes: IterableChanges<T>, items: T[]): RxListTemplateChanges;
}
